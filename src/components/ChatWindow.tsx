import { useState, useRef, useEffect, memo } from 'react';
import { Send, Bot, User, Loader2, Mic, AlertTriangle } from 'lucide-react'; 
// --- Import untuk Markdown ---
import ReactMarkdown from 'react-markdown';
import remarkGfm from 'remark-gfm'; // Untuk mendukung GFM (Tabel, checklist, dll.)
// --- Import dari react-speech-recognition ---
import SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'; 
// ---------------------------------------------

interface Message {
Â  role: 'ai' | 'user';
Â  text: string;
Â  timestamp: Date;
}

interface ChatWindowProps {
Â  conversation: Message[];
Â  onSendMessage: (message: string) => void;
Â  isDisabled: boolean;
}

// =======================================================
// Komponen Pembantu: MessageBubble
// =======================================================

interface MessageBubbleProps {
Â  message: Message;
Â  formatTime: (date: Date) => string;
}

const MessageBubble = memo(({ message, formatTime }: MessageBubbleProps) => {
Â  const isUser = message.role === 'user';
Â  const isTyping = message.text === 'Jiwamu sedang mengetik...';
Â  
Â  const typingBg = 'bg-gray-200 text-gray-500'; 
Â  const aiBg = 'bg-white text-gray-800';
Â  const userBg = 'bg-gradient-to-r from-emerald-600 to-teal-600 text-white'; 

Â  // Menentukan komponen kustom untuk ReactMarkdown (khusus untuk bubble AI)
Â  const AiMarkdownComponents = {
Â  Â  Â  // Mengatasi elemen <li> agar terlihat rapi
Â  Â  Â  li: ({ node, ...props }: any) => (
Â  Â  Â  Â  <li className="mb-1 ml-4 list-disc marker:text-emerald-500" {...props} />
Â  Â  Â  ),
Â  Â  Â  // Mengatasi elemen <p>
Â  Â  Â  p: ({ node, ...props }: any) => (
Â  Â  Â  Â  <p className="mb-2 last:mb-0" {...props} />
Â  Â  Â  ),
Â  Â  Â  // Mengatasi elemen <code> (inline code)
Â  Â  Â  code: ({ node, inline, className, children, ...props }: any) => {
Â  Â  Â  Â  Â  return inline ? (
Â  Â  Â  Â  Â  Â  <code className="bg-gray-100 text-red-600 px-1 py-0.5 rounded text-sm" {...props}>
Â  Â  Â  Â  Â  Â  Â  {children}
Â  Â  Â  Â  Â  Â  </code>
Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  // Untuk block code, gunakan pre dan code
Â  Â  Â  Â  Â  Â  <pre className="bg-gray-100 p-2 rounded-lg my-2 overflow-x-auto text-xs">
Â  Â  Â  Â  Â  Â  Â  <code className="text-gray-800" {...props}>{children}</code>
Â  Â  Â  Â  Â  Â  </pre>
Â  Â  Â  Â  Â  );
Â  Â  Â  },
Â  };

Â  return (
Â  Â  <div
Â  Â  Â  className={`flex items-start space-x-2 ${
Â  Â  Â  Â  isUser ? 'flex-row-reverse space-x-reverse' : ''
Â  Â  Â  }`}
Â  Â  >
Â  Â  Â  {/* Avatar/Ikon */}
Â  Â  Â  <div
Â  Â  Â  Â  className={`flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center 
Â  Â  Â  Â  Â  ${isUser ? 'bg-gray-700' : 'bg-gradient-to-br from-emerald-500 to-teal-500'}
Â  Â  Â  Â  `}
Â  Â  Â  >
Â  Â  Â  Â  {isUser ? (
Â  Â  Â  Â  Â  <User className="w-5 h-5 text-white" />
Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  <Bot className="w-5 h-5 text-white" />
Â  Â  Â  Â  )}
Â  Â  Â  </div>

Â  Â  Â  {/* Konten Pesan */}
Â  Â  Â  <div
Â  Â  Â  Â  className={`flex flex-col max-w-[75%] md:max-w-[70%] ${
Â  Â  Â  Â  Â  isUser ? 'items-end' : 'items-start'
Â  Â  Â  Â  }`}
Â  Â  Â  >
Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  className={`px-4 py-3 rounded-2xl shadow-sm transition-colors duration-200 
Â  Â  Â  Â  Â  Â  ${isUser ? userBg : (isTyping ? typingBg : aiBg)} 
Â  Â  Â  Â  Â  Â  ${isUser ? 'rounded-tr-sm' : 'rounded-tl-sm'}
Â  Â  Â  Â  Â  `}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  {isTyping ? (
Â  Â  Â  Â  Â  Â  <div className="flex items-center space-x-2">
Â  Â  Â  Â  Â  Â  Â  Â  <Loader2 className="w-4 h-4 animate-spin" />
Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-sm md:text-base italic">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {message.text}
Â  Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  <div className={`${isUser ? 'text-white' : 'text-gray-800'} text-sm md:text-base leading-relaxed whitespace-pre-wrap`}>
Â  Â  Â  Â  Â  Â  Â  {/* MENGGUNAKAN REACT MARKDOWN DI SINI */}
Â  Â  Â  Â  Â  Â  Â  {isUser ? (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <p>{message.text}</p>
Â  Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <ReactMarkdown
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  components={AiMarkdownComponents}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  remarkPlugins={[remarkGfm]}
Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {message.text}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </ReactMarkdown>
Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  </div>
Â  Â  Â  Â  {/* Timestamp hanya jika BUKAN pesan typing */}
Â  Â  Â  Â  {!isTyping && (
Â  Â  Â  Â  Â  <span className="text-xs text-gray-500 mt-1 px-1">
Â  Â  Â  Â  Â  Â  {formatTime(message.timestamp)}
Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  )}
Â  Â  Â  </div>
Â  Â  </div>
Â  );
});

// =======================================================
// Komponen Utama: ChatWindow
// =======================================================

function ChatWindow({ conversation, onSendMessage, isDisabled }: ChatWindowProps) {
Â  const [inputValue, setInputValue] = useState('');
Â  const messagesEndRef = useRef<HTMLDivElement>(null); 

Â  // --- LOGIKA SPEECH RECOGNITION ---
Â  const {
Â  Â  Â  transcript,
Â  Â  Â  listening,
Â  Â  Â  resetTranscript,
Â  Â  Â  browserSupportsSpeechRecognition,
Â  } = useSpeechRecognition();
Â  
Â  const [isVoiceMode, setIsVoiceMode] = useState(false);

Â  useEffect(() => {
Â  Â  Â  if (isVoiceMode) {
Â  Â  Â  Â  Â  setInputValue(transcript);
Â  Â  Â  }
Â  }, [transcript, isVoiceMode]);
Â  // ---------------------------------
Â  
Â 


Â  const handleSubmit = (e: React.FormEvent) => {
Â  Â  e.preventDefault();
Â  Â  const trimmedValue = inputValue.trim();
Â  Â  
Â  Â  // Hentikan voice recognition jika sedang aktif saat pesan dikirim
Â  Â  if (listening) {
Â  Â  Â  Â  SpeechRecognition.stopListening();
Â  Â  Â  Â  setIsVoiceMode(false);
Â  Â  }
Â  Â  
Â  Â  if (trimmedValue && !isDisabled) {
Â  Â  Â  onSendMessage(trimmedValue);
Â  Â  Â  setInputValue('');
Â  Â  Â  resetTranscript(); // Reset transcript setelah pesan dikirim
Â  Â  }
Â  };

Â  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {
Â  Â  if (e.key === 'Enter' && !e.shiftKey && !isDisabled && !listening) {
Â  Â  Â  Â  e.preventDefault(); 
Â  Â  Â  Â  handleSubmit(e as unknown as React.FormEvent);
Â  Â  }
Â  };
Â  
Â  // FUNGSI TOGGLE MIKROFON
Â  const toggleListening = () => {
Â  Â  Â  if (!browserSupportsSpeechRecognition) return;

Â  Â  Â  if (listening) {
Â  Â  Â  Â  Â  SpeechRecognition.stopListening();
Â  Â  Â  Â  Â  setIsVoiceMode(false);
Â  Â  Â  } else {
Â  Â  Â  Â  Â  // Hapus input yang diketik sebelum memulai STT
Â  Â  Â  Â  Â  setInputValue(''); 
Â  Â  Â  Â  Â  resetTranscript();
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  SpeechRecognition.startListening({ 
Â  Â  Â  Â  Â  Â  Â  continuous: true, 
Â  Â  Â  Â  Â  Â  Â  language: 'id-ID' // Menggunakan bahasa Indonesia
Â  Â  Â  Â  Â  });
Â  Â  Â  Â  Â  setIsVoiceMode(true);
Â  Â  Â  }
Â  };

Â  const formatTime = (date: Date) => {
Â  Â  return date.toLocaleTimeString('id-ID', {
Â  Â  Â  hour: '2-digit',
Â  Â  Â  minute: '2-digit',
Â  Â  });
Â  };
Â  
Â  // Tampilkan peringatan jika browser tidak mendukung STT
Â  if (!browserSupportsSpeechRecognition) {
Â  Â  Â  return (
Â  Â  Â  Â  Â  <div className="flex flex-col h-full bg-white rounded-2xl shadow-lg overflow-hidden items-center justify-center p-8 text-center">
Â  Â  Â  Â  Â  Â  Â  <AlertTriangle className="w-12 h-12 text-red-500 mb-4" />
Â  Â  Â  Â  Â  Â  Â  <h2 className="text-xl font-bold text-gray-800 mb-2">Browser Tidak Didukung</h2>
Â  Â  Â  Â  Â  Â  Â  <p className="text-gray-600">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Fitur *voice input* tidak didukung oleh browser ini. Silakan gunakan **Google Chrome atau Microsoft Edge** di desktop atau Android.
Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  );
Â  }


Â  return (
Â  Â  // Menggunakan h-full untuk mengatasi masalah scroll halaman utama
Â  Â  <div className="flex flex-col h-full bg-white rounded-2xl shadow-lg overflow-hidden">
Â  Â  Â  
Â  Â  Â  {/* Header Statis */}
Â  Â  Â  <header className="bg-gradient-to-r from-emerald-500 to-teal-500 px-4 md:px-6 py-4 text-white flex-shrink-0">
Â  Â  Â  Â  <div className="flex items-center space-x-3">
Â  Â  Â  Â  Â  <div className="w-10 h-10 bg-white/20 rounded-full flex items-center justify-center">
Â  Â  Â  Â  Â  Â  <Bot className="w-6 h-6" />
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <h3 className="font-semibold">Jiwamu - Teman Curhat AI</h3>
Â  Â  Â  Â  Â  Â  <p className="text-xs text-white/80">Selalu siap mendengarkan tanpa menghakimi ðŸ’–</p>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  </header>

Â  Â  Â  {/* Area Pesan yang Dapat Di-scroll */}
Â  Â  Â  <div className="flex-1 overflow-y-auto p-4 md:p-6 space-y-4 bg-gray-50">
Â  Â  Â  Â  {conversation.map((message, index) => (
Â  Â  Â  Â  Â  <MessageBubble 
Â  Â  Â  Â  Â  Â  key={index} 
Â  Â  Â  Â  Â  Â  message={message} 
Â  Â  Â  Â  Â  Â  formatTime={formatTime} 
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  ))}
Â  Â  Â  Â  {/* Marker ref untuk scroll otomatis */}
Â  Â  Â  Â  <div ref={messagesEndRef} className="h-0.5" /> 
Â  Â  Â  </div>

Â  Â  Â  {/* Input dan Tombol Kirim */}
Â  Â  Â  <form
Â  Â  Â  Â  onSubmit={handleSubmit}
Â  Â  Â  Â  className="border-t border-gray-200 p-4 bg-white flex-shrink-0"
Â  Â  Â  >
Â  Â  Â  Â  <div className="flex items-center space-x-2">
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  {/* Tombol Mikrofon */}
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  type="button"
Â  Â  Â  Â  Â  Â  onClick={toggleListening}
Â  Â  Â  Â  Â  Â  disabled={isDisabled}
Â  Â  Â  Â  Â  Â  className={`
Â  Â  Â  Â  Â  Â  Â  relative p-3 rounded-full transition-colors duration-200 border-2
Â  Â  Â  Â  Â  Â  Â  ${listening 
Â  Â  Â  Â  Â  Â  Â  Â  Â  ? 'bg-red-600 text-white border-red-700 shadow-xl ring-4 ring-red-300/50' // Style saat merekam
Â  Â  Â  Â  Â  Â  Â  Â  Â  : 'bg-gray-100 text-gray-600 hover:bg-gray-200 border-gray-200' // Style normal
Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  disabled:opacity-50 disabled:cursor-not-allowed
Â  Â  Â  Â  Â  Â  `}
Â  Â  Â  Â  Â  Â  aria-label={listening ? "Stop Recording" : "Start Recording"}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  {/* Efek Denyut (Pulse) - Layer Bawah */}
Â  Â  Â  Â  Â  Â  {listening && (
Â  Â  Â  Â  Â  Â  Â  <span className="absolute inset-0 rounded-full bg-red-600 opacity-75 animate-ping"></span>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  {/* Ikon Mikrofon */}
Â  Â  Â  Â  Â  Â  <Mic className="w-5 h-5 relative z-10" />
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  {/* Input Teks */}
Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  value={inputValue}
Â  Â  Â  Â  Â  Â  onChange={(e) => {
Â  Â  Â  Â  Â  Â  Â  setInputValue(e.target.value);
Â  Â  Â  Â  Â  Â  Â  // Matikan mode bicara jika user mulai mengetik manual
Â  Â  Â  Â  Â  Â  Â  if (isVoiceMode) setIsVoiceMode(false);
Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  onKeyDown={handleKeyDown} 
Â  Â  Â  Â  Â  Â  placeholder={
Â  Â  Â  Â  Â  Â  Â  Â  isDisabled 
Â  Â  Â  Â  Â  Â  Â  Â  Â  ? "Tunggu Jiwamu selesai membalas..." 
Â  Â  Â  Â  Â  Â  Â  Â  Â  : (listening ? "Mendengarkan ucapan Anda..." : "Ketik pesan di sini...")
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  disabled={isDisabled || listening} // Disable input saat loading atau mendengarkan
Â  Â  Â  Â  Â  Â  className={`flex-1 px-4 py-3 border-0 rounded-xl focus:outline-none focus:ring-2 focus:ring-emerald-500 text-sm md:text-base transition-colors duration-200 
Â  Â  Â  Â  Â  Â  Â  ${isDisabled || listening ? 'bg-gray-200 text-gray-500 cursor-not-allowed' : 'bg-gray-100 text-gray-800'}
Â  Â  Â  Â  Â  Â  `}
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  {/* Tombol Kirim */}
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  type="submit"
Â  Â  Â  Â  Â  Â  disabled={!inputValue.trim() || isDisabled || listening} // Disable juga saat mendengarkan
Â  Â  Â  Â  Â  Â  className="p-3 bg-gradient-to-r from-emerald-600 to-teal-600 text-white rounded-xl shadow-md hover:shadow-lg disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 transform hover:scale-105 disabled:transform-none"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  {isDisabled ? (
Â  Â  Â  Â  Â  Â  Â  Â  <Loader2 className="w-5 h-5 animate-spin" />
Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  Â  <Send className="w-5 h-5" />
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  </div>
Â  Â  Â  </form>
Â  Â  </div>
Â  );
}

export default ChatWindow;
